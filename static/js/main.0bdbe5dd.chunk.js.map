{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","loading","error","popular","map","movie","original_title","poster_path","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","collectionApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","img","Data","ItemContainer","Item","Divider","Overview","p","CollectionContainer","CollectionTitle","h3","Collection","DetailPresenter","result","backdrop_path","src","runtime","episode_run_time","genres","genre","index","name","href","imdb_id","rel","overview","belongs_to_collection","DetailContainer","pathname","location","includes","isShow","match","push","history","parsedId","parseInt","isNaN","CollectionPresenter","parts","part","Header","header","List","ul","li","current","SLink","Link","withRouter","MyRouter","path","exact","component","Home","TV","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bdbe5dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.3ae03fdd.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 175px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">⏰</span>\n  </Container>\n);\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-weight: 600;\n`;\n\n\nconst Error = ({text, color}) => <Container><Text color={color}>{text}</Text></Container>\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\n\nexport default Error","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity .1s linear;\n`;\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255,255,255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🌟\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, loading, error, popular }) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>Movies | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"e74c3c\" />}\n      </Container>\n    )}\n  </HelmetProvider>\n);\n;\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  popular: PropTypes.array,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"d6e574f1650cce37309d7a7e8294357e\",\n    language: \"en-US\",\n  },\n});\n\n\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: { append_to_response: \"videos\" },\n    }),\n  search: (term) =>\n    api.get(`search/movie`, {\n      params: { query: encodeURIComponent(term) },\n    }),\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: { append_to_response: \"videos\" },\n    }),\n  search: (term) =>\n    api.get(`search/tv`, {\n      params: { query: encodeURIComponent(term) },\n    }),\n};\n\nexport const collectionApi = {\n  showDetail: (id) =>\n    api.get(`collection/${id}`, {\n      params: { append_to_response: \"videos\" },\n    }),\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"api\"\n\nclass HomeContainer extends React.Component{\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount(){\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch (error) {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render(){\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} ></HomePresenter>\n  }\n}\nexport default HomeContainer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>TV Shows | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                isMovie={false}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                isMovie={false}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                isMovie={false}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"e74c3c\" />}\n      </Container>\n    )}\n  </HelmetProvider>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  poplular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\"\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount(){\n    try {\n      const {data: {results: topRated}} = await tvApi.topRated();\n      const {data: {results: popular}} = await tvApi.popular();\n      const {data: {results: airingToday}} = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch (error) {\n      this.setState({error: \"Can't fint TV information\"})\n    }finally{\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\nconsole.log(this.state)\n    return (\n      <TVPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\nexport default TVContainer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <HelmetProvider>\n    <Helmet>\n      <title>Search | Nomfilx</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  id={show.id}\n                  title={show.original_name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  isMovie={true}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n      {error && <Message text={error} color=\"e74c3c\" />}\n      {movieResults &&\n        tvResults &&\n        movieResults.length === 0 &&\n        tvResults.length === 0 && (\n          <Message text={`Nothing found for ${searchTerm}`} color=\"#ecf0f1\" />\n        )}\n    </Container>\n  </HelmetProvider>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: true,\n  };\n\n  componentDidMount() {}\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch (error) {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\nexport default SearchContainer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Loader from \"Components/Loader\";\nimport {Link} from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: -29px;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center, center;\n  background-size: cover;\n  filter: blur(5px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\nconst Cover = styled.img`\n  max-width: 50%;\n  height: auto;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.div`\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0; \n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst CollectionContainer = styled.div`\n  margin-top: 30px;\n`;\nconst CollectionTitle = styled.h3`\n  margin: 10px 0;\n  font-size: 18px;\n`;\nconst Collection = styled.img`\n  width: 100px;\n`;\n\nconst DetailPresenter = ({ result, loading, error, isMovie }) => (\n  <HelmetProvider>\n    {loading || !result ? (\n      <>\n        <Helmet>\n          <title>Search | Nomfilx</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Nomfilx\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        ></Backdrop>\n        <Content>\n          <Cover\n            src={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\").default\n            }\n          ></Cover>\n          <Data>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.runtime ? result.runtime : result.episode_run_time}min\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                <a\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  IMDb\n                </a>\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                <span role=\"img\" aria-label=\"rating\">\n                  🌟\n                </span>{\" \"}\n                {result.vote_average}/10\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n            {result.belongs_to_collection ? (\n              <CollectionContainer>\n                <CollectionTitle>\n                  {result.belongs_to_collection.name}\n                </CollectionTitle>\n                <Link to={`/collection/${result.belongs_to_collection.id}`}>\n                  <Collection\n                    src={`https://image.tmdb.org/t/p/original${result.belongs_to_collection.poster_path}`}\n                  />\n                </Link>\n              </CollectionContainer>\n            ) : (\n              \"\"\n            )}\n          </Data>\n        </Content>\n      </Container>\n    )}\n  </HelmetProvider>\n);\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi, collectionApi } from \"api\";\n\n\nclass DetailContainer extends React.Component {\n  constructor(props){\n    super(props);\n    const {location: {pathname}} = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n      isShow: pathname.includes(\"/show/\")\n    };\n  }\n\n  \n  async componentDidMount(){\n    const {\n      match: { params: {id} },\n      history: { push }\n    } = this.props;\n    const { isMovie, isShow } = this.state;\n    const parsedId = parseInt(id);\n    if(isNaN(parsedId)) return push(\"/\");\n    let result;\n    try {\n      if(isMovie) {\n        ({data: result} = await movieApi.movieDetail(parsedId));\n      }else if(isShow){\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }else{\n        ({ data: result } = await collectionApi.showDetail(parsedId));\n      }\n    } catch (error) {\n      this.setState({error: \"Can't find movie\", result})\n    }finally{\n      this.setState({loading: false, result})\n    }\n\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\nexport default DetailContainer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Loader from \"Components/Loader\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: -29px;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center, center;\n  background-size: cover;\n  filter: blur(5px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\nconst Title = styled.div`\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\nconst Cover = styled.img`\n  max-width: 50%;\n  height: auto;\n  border-radius: 5px;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst CollectionContainer = styled.div`\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 175px);\n  grid-gap: 25px;\n`;\n\nconst CollectionPresenter = ({ result, loading, error, isMovie }) => (\n  <HelmetProvider>\n    {loading ? (\n      <>\n        <Helmet>\n          <title>Collection | Nomfilx</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <Container>\n        <Helmet>\n          <title>{result.name}\" | Nomfilx\"</title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        ></Backdrop>\n        <Content>\n          <Cover\n            src={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/noPosterSmall.png\").default\n            }\n          ></Cover>\n          <Data>\n            <Title>{result.name}</Title>\n            <Overview>{result.overview}</Overview>\n            <CollectionContainer>\n              {result.parts.map((part) => (\n                <Poster\n                  id={part.id}\n                  title={part.original_title}\n                  imageUrl={part.poster_path}\n                  rating={part.vote_average}\n                  isMovie={true}\n                  year={\n                    part.release_date && part.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </CollectionContainer>\n          </Data>\n        </Content>\n      </Container>\n    )}\n  </HelmetProvider>\n);\n\nCollectionPresenter.propTypes = {\n  result: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\nimport { collectionApi } from \"api\";\n\nclass CollectionContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) return push(\"/\");\n    let result;\n    try {\n      ({ data: result } = await collectionApi.showDetail(parsedId));\n      console.log(result);\n    } catch (error) {\n      this.setState({ error: \"Can't find movie\", result });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    return <CollectionPresenter result={result} error={error} loading={loading} />;\n  }\n}\nexport default CollectionContainer","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 100;\n`;\nconst List = styled.ul`\n  display: flex;\n`\nconst Item = styled.li`\n  width: 80px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom  0.5s ease-in-out\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Collection from \"Routes/Collection\"; \nimport Header from \"Components/Header\";\n\nconst MyRouter = () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/collection/:id\" component={Collection} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default MyRouter","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu;\n    font-size: 14px;\n    background-color: rgba(20, 20, 20, 1);\n    padding-top: 50px;\n    color: white;\n  }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render () {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}